# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

# Project name should ideally match the project name in your Cargo.toml.
project_name: "rcargo"

before:
  hooks:
    - rustup default stable
    - cargo install --locked cargo-zigbuild
    # - cargo install --locked cross --git https://github.com/cross-rs/cross
    - cargo fetch --locked

builds:
  # - id: linux-amd64-gnu
  #   builder: rust
  #   targets:
  #     - x86_64-unknown-linux-gnu
  - id: linux-amd64-musl
    builder: rust
    targets:
      - x86_64-unknown-linux-musl
  # - id: linux-arm64-gnu
  #   builder: rust
  #   targets:
  #     - aarch64-unknown-linux-gnu
  - id: linux-arm64-musl
    builder: rust
    targets:
      - aarch64-unknown-linux-musl
  - id: windows-amd64-gnu
    builder: rust
    # tool: cross
    # command: build
    targets:
      - x86_64-pc-windows-gnu

# Creates archives for each target.
archives:
  - formats: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    #  {{- if contains .Target "musl" }}-musl
    #  {{- else if contains .Target "gnu" }}-gnu
    #  {{- end }}

    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^ci:"
      - "^build:"

